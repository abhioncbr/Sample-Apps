apiVersion: v1
kind: Service
metadata:
  labels:
    app: go-webapp
  name: go-webapp-svc
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: go-webapp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-webapp-dep
spec:
  selector:
    matchLabels:
      app: go-webapp
  template:
    metadata:
      labels:
        app: go-webapp
    spec:
      containers:
        - name: go-webapp
          image: abhioncbr/go-webapp:v1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 20m
              memory: 50Mi
            limits:
              cpu: 20m
              memory: 50Mi
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    app: go-webapp
  name: go-webapp-ing
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: go-webapp.kind-clstr.com
      http:
        paths:
          - backend:
              serviceName: go-webapp-svc
              servicePort: 8080
            path: /(.*)